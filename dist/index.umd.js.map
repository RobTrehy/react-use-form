{"version":3,"file":"index.umd.js","sources":["../src/context/FormContext.ts","../src/utils.ts","../src/form/Errors.ts","../src/form/Form.ts","../src/hooks/useForm.ts"],"sourcesContent":["import { AxiosInstance } from 'axios';\r\nimport { createContext } from 'react';\r\n\r\nconst FormContext = createContext<AxiosInstance | undefined>(undefined);\r\n\r\nexport default FormContext;\r\n","/**\r\n * Deep copy the given object.\r\n */\r\nexport function deepCopy<T>(obj: T): T {\r\n  if (obj === null || typeof obj !== 'object') {\r\n    return obj;\r\n  }\r\n\r\n  const copy: any = Array.isArray(obj) ? [] : {};\r\n\r\n  Object.keys(obj).forEach((key) => {\r\n    copy[key] = deepCopy((obj as any)[key]);\r\n  });\r\n\r\n  return copy;\r\n}\r\n\r\n/**\r\n * If the given value is not an array, wrap it in one.\r\n */\r\nexport function arrayWrap<T>(value: T | T[]): T[] {\r\n  return Array.isArray(value) ? value : [value];\r\n}\r\n\r\n/**\r\n * Determine if the given data has files.\r\n */\r\nexport function hasFiles(data: File | Blob | FileList | Record<string, any>): boolean {\r\n  return (\r\n    data instanceof File ||\r\n    data instanceof Blob ||\r\n    (typeof FileList !== 'undefined' && data instanceof FileList) ||\r\n    (typeof data === 'object' &&\r\n      data !== null &&\r\n      Object.values(data).find((value) => hasFiles(value)) !== undefined)\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nimport { arrayWrap } from '../utils';\r\n\r\nclass Errors {\r\n  state: Record<string, string[]>;\r\n  setState: React.Dispatch<React.SetStateAction<Record<string, string[]>>>;\r\n\r\n  constructor([state, setState]: [\r\n    Record<string, string[]>,\r\n    React.Dispatch<React.SetStateAction<Record<string, string[]>>>,\r\n  ]) {\r\n    this.state = state;\r\n    this.setState = setState;\r\n  }\r\n\r\n  set(errorsOrField: string | Record<string, string[]>, fieldMessages?: any) {\r\n    if (typeof errorsOrField === 'object') {\r\n      this.setState(() => errorsOrField);\r\n    } else {\r\n      this.setState((state) => ({\r\n        ...state,\r\n        [errorsOrField]: arrayWrap(fieldMessages),\r\n      }));\r\n    }\r\n  }\r\n\r\n  get(field: string): string | undefined {\r\n    if (this.state[field] !== undefined) {\r\n      return this.state[field][0];\r\n    }\r\n\r\n    return undefined;\r\n  }\r\n\r\n  getAll(field: string): string[] | undefined {\r\n    if (this.state[field] !== undefined) {\r\n      return this.state[field];\r\n    }\r\n\r\n    return undefined;\r\n  }\r\n\r\n  has(field: string): boolean {\r\n    return this.state[field] !== undefined;\r\n  }\r\n\r\n  any(): boolean {\r\n    return Object.keys(this.state).length > 0;\r\n  }\r\n\r\n  all(): Record<string, string[]> {\r\n    return this.state;\r\n  }\r\n\r\n  flatten(): string[] {\r\n    return Object.values(this.state).reduce(\r\n      (errors, fieldErrors) => [...errors, ...fieldErrors],\r\n      [],\r\n    );\r\n  }\r\n\r\n  clear(fieldOrFields?: string | string[]): void {\r\n    if (fieldOrFields === undefined) {\r\n      this.setState({});\r\n      return;\r\n    }\r\n\r\n    this.setState((state) => {\r\n      const newState = { ...state };\r\n      const fields = arrayWrap(fieldOrFields);\r\n\r\n      fields.forEach((field) => {\r\n        delete newState[field];\r\n      });\r\n\r\n      return newState;\r\n    });\r\n  }\r\n}\r\n\r\nexport default Errors;\r\n","import axios, {\r\n  AxiosError,\r\n  AxiosInstance,\r\n  AxiosProgressEvent,\r\n  AxiosRequestConfig,\r\n  AxiosResponse,\r\n  Method,\r\n} from 'axios';\r\nimport React from 'react';\r\n\r\nimport { deepCopy, hasFiles } from '../utils';\r\nimport Errors from './Errors';\r\n\r\nexport interface FormState<Data extends Record<string, any>> {\r\n  data: Data;\r\n  busy: boolean;\r\n  successful: boolean;\r\n  progress: Progress | undefined;\r\n}\r\nexport interface Progress {\r\n  total: number;\r\n  loaded: number;\r\n  percentage: number;\r\n}\r\n\r\nclass Form<Data extends Record<string, any>> {\r\n  originalData: Data;\r\n\r\n  formState: [FormState<Data>, React.Dispatch<React.SetStateAction<FormState<Data>>>];\r\n\r\n  errors: Errors;\r\n\r\n  static axios: AxiosInstance;\r\n\r\n  static errorMessage = 'Something went wrong. Please try again.';\r\n\r\n  constructor(\r\n    formState: [FormState<Data>, React.Dispatch<React.SetStateAction<FormState<Data>>>],\r\n    errorsState: [\r\n      Record<string, string[]>,\r\n      React.Dispatch<React.SetStateAction<Record<string, string[]>>>,\r\n    ],\r\n  ) {\r\n    this.formState = formState;\r\n    this.errors = new Errors(errorsState);\r\n    this.originalData = deepCopy<Data>(formState[0].data);\r\n  }\r\n\r\n  setState(field: string, value: any) {\r\n    this.formState[1]((state) => ({\r\n      ...state,\r\n      [field]: value,\r\n    }));\r\n  }\r\n\r\n  getField(key: string): any {\r\n    return this.formState[0]['data'][key];\r\n  }\r\n\r\n  set(key: string, value: any): void {\r\n    this.setState('data', {\r\n      ...this.formState[0]['data'],\r\n      [key]: value,\r\n    });\r\n  }\r\n\r\n  keys(): string[] {\r\n    return Object.keys(this.formState[0].data);\r\n  }\r\n\r\n  fill(data: Partial<Data> = {}) {\r\n    this.setState('data', {\r\n      ...this.formState[0]['data'],\r\n      ...data,\r\n    } as Data);\r\n  }\r\n\r\n  data(): Data {\r\n    return this.keys().reduce(\r\n      (data, key) => ({ ...data, [key]: this.getField(key) }),\r\n      {},\r\n    ) as Data;\r\n  }\r\n\r\n  reset(): void {\r\n    this.setState('data', this.originalData);\r\n  }\r\n\r\n  /**\r\n   * Start processing the form.\r\n   */\r\n  startProcessing() {\r\n    this.errors.clear();\r\n\r\n    this.formState[1]((state) => ({\r\n      ...state,\r\n      busy: true,\r\n      successful: false,\r\n      progress: undefined,\r\n    }));\r\n  }\r\n\r\n  /**\r\n   * Finish processing the form.\r\n   */\r\n  finishProcessing() {\r\n    this.formState[1]((state) => ({\r\n      ...state,\r\n      busy: false,\r\n      successful: true,\r\n      progress: undefined,\r\n    }));\r\n  }\r\n\r\n  /**\r\n   * Submit the form via a GET request.\r\n   */\r\n  get<T = any>(url: string, config: AxiosRequestConfig = {}): Promise<AxiosResponse<T>> {\r\n    return this.submit<T>('get', url, config);\r\n  }\r\n\r\n  /**\r\n   * Submit the form via a POST request.\r\n   */\r\n  post<T = any>(url: string, config: AxiosRequestConfig = {}): Promise<AxiosResponse<T>> {\r\n    return this.submit<T>('post', url, config);\r\n  }\r\n\r\n  /**\r\n   * Submit the form via a PATCH request.\r\n   */\r\n  patch<T = any>(\r\n    url: string,\r\n    config: AxiosRequestConfig = {},\r\n  ): Promise<AxiosResponse<T>> {\r\n    return this.submit<T>('patch', url, config);\r\n  }\r\n\r\n  /**\r\n   * Submit the form via a PUT request.\r\n   */\r\n  put<T = any>(url: string, config: AxiosRequestConfig = {}): Promise<AxiosResponse<T>> {\r\n    return this.submit<T>('put', url, config);\r\n  }\r\n\r\n  /**\r\n   * Submit the form via a DELETE request.\r\n   */\r\n  delete<T = any>(\r\n    url: string,\r\n    config: AxiosRequestConfig = {},\r\n  ): Promise<AxiosResponse<T>> {\r\n    return this.submit<T>('delete', url, config);\r\n  }\r\n\r\n  submit<T = any>(\r\n    method: Method,\r\n    url: string,\r\n    config: AxiosRequestConfig = {},\r\n  ): Promise<AxiosResponse<T>> {\r\n    this.startProcessing();\r\n\r\n    config = {\r\n      data: {},\r\n      params: {},\r\n      url,\r\n      method,\r\n      onUploadProgress: this.handleUploadProgress.bind(this),\r\n      ...config,\r\n    };\r\n\r\n    if (method.toLowerCase() === 'get') {\r\n      config.params = { ...this.data(), ...config.params };\r\n    } else {\r\n      config.data = { ...this.data(), ...config.data };\r\n\r\n      if (hasFiles(config.data) && !config.transformRequest) {\r\n        config.transformRequest = [(data) => this.toFormData(data)];\r\n      }\r\n    }\r\n\r\n    return new Promise<AxiosResponse<T>>((resolve, reject) => {\r\n      (Form.axios || axios)\r\n        .request(config)\r\n        .then((response: AxiosResponse<T>) => {\r\n          this.finishProcessing();\r\n          resolve(response);\r\n        })\r\n        .catch((error: AxiosError) => {\r\n          this.handleErrors(error);\r\n          reject(error);\r\n        });\r\n    });\r\n  }\r\n\r\n  handleErrors(error: AxiosError) {\r\n    if (error.response) {\r\n      this.errors.set(this.extractErrors(error.response));\r\n    }\r\n\r\n    this.formState[1]((state) => ({\r\n      ...state,\r\n      busy: false,\r\n      progress: undefined,\r\n    }));\r\n  }\r\n\r\n  extractErrors(response: AxiosResponse): Record<string, any> {\r\n    if (!response.data || typeof response.data !== 'object') {\r\n      return { error: [Form.errorMessage] };\r\n    }\r\n\r\n    if (response.data.errors) {\r\n      return { ...response.data.errors };\r\n    }\r\n\r\n    if (response.data.message) {\r\n      return { error: [response.data.message] };\r\n    }\r\n\r\n    return { ...response.data };\r\n  }\r\n\r\n  handleUploadProgress(event: AxiosProgressEvent) {\r\n    this.setState('progress', {\r\n      total: event.total,\r\n      loaded: event.loaded,\r\n      percentage: Math.round((event.loaded * 100) / (event.total || 0)),\r\n    });\r\n  }\r\n\r\n  toFormData(data: Record<string, string | Blob>) {\r\n    const formData = new FormData();\r\n\r\n    Object.keys(data).forEach((key) => {\r\n      const value = data[key];\r\n\r\n      if (typeof FileList !== 'undefined' && value instanceof FileList) {\r\n        [].slice.call(value).forEach((file) => formData.append(key, file));\r\n      } else {\r\n        formData.append(key, value);\r\n      }\r\n    });\r\n\r\n    return formData;\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import { AxiosInstance } from 'axios';\r\nimport { useContext, useState } from 'react';\r\n\r\nimport FormContext from '../context/FormContext';\r\nimport FormClass, { FormState } from '../form/Form';\r\n\r\nexport type Form<Data extends Record<string, any> = Record<string, any>> =\r\n  FormClass<Data> & Data & Omit<FormState<Data>, 'data'>;\r\n\r\nexport const useForm = <Data extends Record<string, any> = Record<string, any>>(\r\n  data: Data,\r\n  axiosInstance?: AxiosInstance,\r\n): Form<Data> => {\r\n  const axios = useContext(FormContext) || axiosInstance;\r\n\r\n  if (axios !== undefined) {\r\n    FormClass.axios = axios;\r\n  }\r\n\r\n  const formState = useState<FormState<Data>>({\r\n    data,\r\n    busy: false,\r\n    successful: false,\r\n    progress: undefined,\r\n  });\r\n\r\n  const errorsState = useState({});\r\n  const form = new FormClass(formState, errorsState);\r\n\r\n  // eslint-disable-next-line no-undef\r\n  return new Proxy(form, {\r\n    get(form: FormClass<Data>, attribute: string) {\r\n      if (form.keys().includes(attribute)) {\r\n        return form.getField(attribute);\r\n      }\r\n\r\n      if (['progress', 'busy', 'successful'].includes(attribute)) {\r\n        return form.formState[0][attribute as 'progress' | 'busy' | 'successful'];\r\n      }\r\n\r\n      return (form as any)[attribute];\r\n    },\r\n  }) as Form<Data>;\r\n};\r\n"],"names":["createContext","axios","useContext","FormClass","useState","form"],"mappings":"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"}